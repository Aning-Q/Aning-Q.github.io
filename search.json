[{"title":"搭建博客","path":"/2024/08/05/blog/blog/","content":"主页链接—Aning因为看到很多炫酷的个人博客网页，所以就很想做一个自己的网页界面，经过一番探索和搜集网络教程后，我总结一下大致流程和我踩过的坑叭注：以下终端Linux 前提软件需要终端已经安装以下软件Github（产生网站端—.io域名）➕Node.js（安装Hexo—npm命令）➕Hexo（配置网站各种个性化主题） Github在github中新建仓库创建github pages，仓库命名为——username.github.io blog1 详见官方文档创建网址.github.io域名网站 Node.js以下为Linux端口安装软件node.js软件 版本选择——建议选择稳定版本18.8.0下载压缩包 1wget https://registry.npmmirror.com/-/binary/node/v18.18.0/node-v18.18.0-linux-x64.tar.gz 解压并删除压缩包 1tar -zxvf node-v18.18.0-linux-x64.tar.gz &amp;&amp; rm -f node-v18.18.0-linux-x64.tar.gz 将解压后的文件夹改名为nodejs放入软件的文件夹中 1mv node-v18.18.0-linux-x64 /tools/nodejs 最后配置环境变量 .bashrc即可 1export PATH=&quot;$&#123;PATH&#125;:/tools/nodejs/bin&quot; 查看版本 1node -v Hexo安装软件——详见官网 1npm install -g hexo-cli 创建theme文件夹并进行初始配置 123hexo init themecd themenpm install 个性配置安装主题也可以安装Next主题，不过这个主题太多人用了，我就找了另一个大佬的主题，详见这 1npm i hexo-theme-stellar 修改theme文件夹中的_config.yml 主题配置 1theme: stellar 因为要推送到git，同时添加一下网址 1234deploy: type: git repository: git@github.com:Aning-Q/Aning-Q.github.io.git #自己的仓库地址 branch: master #分支也要对应 注：推送时可能会因为分支冲突，github pages可以修改分支端 blog2 首次创建主题需要部署一个插件将其发布到git中 1npm i hexo-deployer-git 安装成功后，执行 1hexo clean &amp;&amp; hexo g &amp;&amp; hexo d hexo clean——清楚缓存hexo g——创建静态网页hexo d——推送git，原理就是将public文件夹中内容的推送至github中 推送成功后打开username.github.io即可看到网址端更新成功啦！ 后续更新将.md文件放入source文件夹的_posts 文件夹即可 网站个性化配置主要是两个文件的配置 theme文件夹的_config.yml theme&#x2F;node_modules&#x2F;hexo-theme-stellar文件夹的_config.yml 在Google中检索到个人网站 网站认证 sitemap站点后续再更新~~~","tags":["to do","生活"],"categories":["教程"]},{"path":"/2024/08/05/annova/","content":""},{"title":"😊Git","path":"/2024/03/04/Git/","content":"常用命令克隆到本地——git clone +ssh&#x2F;htttps：查看状态(有无修改)——git status添加缓存（需要提交的脚本）——git add *添加描述（进行了什么操作）——git commit -m 备注拉取分支（远程中含有的分支）——git fetch origin 分支名查看远程分支——git branch -a创建并切换到本地分支——git checkout -b test origin&#x2F;test切换分支——git checkout main拉取远程分支合并本地——git pull origin 分支名更新本地仓库——git pull提交分支——git push origin 分支名删除已合并的本地分支——git branch -d branch_name 以上有关于分支的操作是需要团队协作是可选择的，如果只对自己的代码进行管理可以简化如下：git clone $\\rightarrow$git status$\\rightarrow$git add * $\\rightarrow$git commit -m 备注$\\rightarrow$git push 远程连接git remote这个命令的意义是建立远程连接，可以将自己另一个文件夹的代码推送到指定远程的仓库中 git init ——先初始化本地文件夹（已经有.git文件不需要） git stauts——查看有哪些未跟踪的文件 git remote add origin http://gitlab.oebiotech.cn/kqq/lcms.git——建立远程连接 git remote -v——查看已建立的远程连接 git remote rm origin——删除远程连接 git push origin master——origin：远程名称；master：分支名 暂存区git add 文件名——提交文件到暂存区git ls-files——查看暂存区git rm –cached 文件名——删除暂存区文件 修改配置","tags":["git"],"categories":["Testing"]},{"title":"😰Python","path":"/2023/11/28/Python/","content":"This is a python test 配置python -m pip install pandas ——安装模块 实用代码数据处理文件夹返回当前工作目录——os.getcwd() 表格ex &#x3D; pd.ExcelFile(file)——ex.sheet_names()——读取sheetdata&#x3D; pd.read_excel(ex,sheet,index_col)——读取文件df1&#x3D;pd.read_csv(“.\\ppi-test-8860\\A_B\\ppi_nodes.xls”,sep&#x3D;”\\t”)——读取xls文件data.columns——列名data.index——行索引data.loc[:,[“”,””]]——提取包含列data.iloc[0, 0]——取第几行几列df &#x3D; df.assign(column_new_1&#x3D;np.nan, column_new_2&#x3D;’dogs’, column_new_3&#x3D;3)——添加多列 数据转化二维列表转化为一维列表——listA&#x3D;[x for j in listB for x in j]set类型——排除重复元素统计个数——Counter(la)–from collections import Counter数组形式——data.items()排序——dpro &#x3D; sorted(dproscore.items(), key&#x3D;lambda x: x[1])–从小到大将表转化为字典——dict(zip(df.iloc[:,0],df.iloc[:,1]))创建新对象赋值——a.copy()一行形式的for循环——[x for x in a] 字符处理使用正则表达式进行匹配——re.search(“0-9“,line)将字典的一个键对应的多个值前都添加相同的字符——dic_g[i] &#x3D; [org + str(x) for x in dic_g[i]]rstrip——去除末尾字符串匹配特定文件后缀——[x for x in a if re.search(r”.py$”,x)]列表替换—[x.replace(“path:”,””) for x in a] 图片绘制图例紧随其后——savefig(‘{compare}.pdf’.format(compare&#x3D;name),dpi&#x3D;300,bbox_inches&#x3D;’tight’)设置画板背景——plt.figure(figsize&#x3D;(7, 5.6),facecolor&#x3D;’white’)— 爬虫爬取数据——response&#x3D;requests.get(url, headers&#x3D;self.headers)url—网址headers—response.status_code &#x3D;&#x3D; 200—响应正常response.text—html格式的文本形式 其他字符串前加 f 的意思格式化 {} 内容，不在 {} 内的照常展示输出，如果你想输出 {}，那就用双层 {{}} 将想输出的内容包起来。","tags":["python","学习"],"categories":["Testing"]},{"title":"Hello World","path":"/2023/11/28/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":["Testing"]},{"title":"about","path":"/about/index.html","content":"超级小白-持续更新~"},{"title":"收藏站点","path":"/notes/index.html","content":"此页面为一些个人认为实用的站点 生信网站R语言http://www.idata8.com/index2.html函数参数释义 https://coolors.co/palettes/trending配色 https://jokergoo.github.io/ComplexHeatmap-reference/book/introduction.htmlComplexHeatmap使用说明 Pythonhttps://matplotlib.org/stable/api/markers_api.html[matplot形状] https://www.jianshu.com/p/32aa2fa936bb[VSCODE远程] 学习https://read.qxmd.com/[文献阅读] https://www.hello-algo.com/chapter_preface/about_the_book/[Hello算法] 个性配置https://emojixd.com/[各种emoji] https://chat.openai.com/[Chagpt] https://discourse.joplinapp.org/tag/tips-and-tricks[joplin论坛] 大佬们https://www.achuan-2.top/[Achuan-2] https://xaoxuu.com/[Stellar主题大佬]","tags":[null,null]}]