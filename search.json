[{"title":"😰Python","path":"/2023/11/27/Python/","content":"This is a python test 配置python -m pip install pandas ——安装模块 实用代码数据处理文件夹返回当前工作目录——os.getcwd() 表格ex &#x3D; pd.ExcelFile(file)——ex.sheet_names()——读取sheetdata&#x3D; pd.read_excel(ex,sheet,index_col)——读取文件df1&#x3D;pd.read_csv(“.\\ppi-test-8860\\A_B\\ppi_nodes.xls”,sep&#x3D;”\\t”)——读取xls文件data.columns——列名data.index——行索引data.loc[:,[“”,””]]——提取包含列data.iloc[0, 0]——取第几行几列df &#x3D; df.assign(column_new_1&#x3D;np.nan, column_new_2&#x3D;’dogs’, column_new_3&#x3D;3)——添加多列 数据转化二维列表转化为一维列表——listA&#x3D;[x for j in listB for x in j]set类型——排除重复元素统计个数——Counter(la)–from collections import Counter数组形式——data.items()排序——dpro &#x3D; sorted(dproscore.items(), key&#x3D;lambda x: x[1])–从小到大将表转化为字典——dict(zip(df.iloc[:,0],df.iloc[:,1]))创建新对象赋值——a.copy()一行形式的for循环——[x for x in a] 字符处理使用正则表达式进行匹配——re.search(“0-9“,line)将字典的一个键对应的多个值前都添加相同的字符——dic_g[i] &#x3D; [org + str(x) for x in dic_g[i]]rstrip——去除末尾字符串匹配特定文件后缀——[x for x in a if re.search(r”.py$”,x)]列表替换—[x.replace(“path:”,””) for x in a] 图片绘制图例紧随其后——savefig(‘{compare}.pdf’.format(compare&#x3D;name),dpi&#x3D;300,bbox_inches&#x3D;’tight’)设置画板背景——plt.figure(figsize&#x3D;(7, 5.6),facecolor&#x3D;’white’)— 爬虫爬取数据——response&#x3D;requests.get(url, headers&#x3D;self.headers)url—网址headers—response.status_code &#x3D;&#x3D; 200—响应正常response.text—html格式的文本形式 其他字符串前加 f 的意思格式化 {} 内容，不在 {} 内的照常展示输出，如果你想输出 {}，那就用双层 {{}} 将想输出的内容包起来。","tags":["python","学习"]},{"title":"Hello World","path":"/2023/11/23/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment"},{"title":"😇关于我","path":"/about/Aning.html","content":"超级小白，正在努力学习中~"}]