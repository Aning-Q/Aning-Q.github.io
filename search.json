[{"path":"/2025/01/14/home/","content":"关于 介绍本书使用对象和创建背景 描述一下各个模块的作用,并说明包含哪些模块 总图 如何使用 介绍如何使用本书"},{"path":"/2025/01/14/5.拓展/5.拓展/","content":"待扩展"},{"path":"/2025/01/14/4.复杂绘图/4.复杂绘图/","content":"热图 和弦图"},{"path":"/2025/01/14/3.常用数据处理/添加关注物质/","content":"函数：get_select_flow 准备 两个软连接：raw background 两个文件：内部分析单.xlsx 数据矩阵.xlsx（需要包含分组sheet后续拼接使用） 关注物质：可以是表格形式，也可以是向量形式 注意: 数据矩阵.xlsx需要包含分组sheet,后续拼接使用 关注物质表格形式必须包含Metabolites列名 使用（几种情况） 运行函数即可get_select_flow('dATP', score = 0,origin = 'origin/数据矩阵.xlsx') 1.关注原项目是否log2转化–不转化：transNorm = NA 2.关注是否是双平台项目–内部分析单.xlsx，不能有-lc后缀 3.关注是否需要强硬添加–不筛score、缺失值、rsd–type = all 4.关注代谢物名称是否有拼写问题，全词匹配会过滤掉很多代谢物 Tips: 没有找到关注物质的话可以载入缓存变量，手动调整关注代谢物名称后再次运行，不用删除任何文件！ 12345load(temp.Rdata)View(negposID)get_select_flow(metas = &#x27;dATP&#x27;, origin = &#x27;origin/数据矩阵.xlsx&#x27;) 结果 image 查询到的关注物质矩阵：my_metas.xlsx 拼接好的数据矩阵：数据矩阵.xlsx 红色：新添加的；蓝色：原m/z替换成关注物质；深绿色：原数据矩阵含有的关注物质 image 缓存文件 temp.Rdata"},{"path":"/2025/01/14/3.常用数据处理/3.常用数据处理/","content":"添加关注物质 数据预处理 表格处理 筛选趋势物质 统计学检验 根据缺失值筛选组内物质"},{"path":"/2025/01/14/3.常用数据处理/筛选趋势物质/","content":"筛选趋势异&amp;同物质 参考路径：/data/metalib/project/2024/202405/DZOE2024041596-b1/售后1 趋势有变化的物质（先升后降/先降后升）仅在分组数量为3组时 需要venn的数据与分组数据 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253abundance_range &lt;- function(data) &#123; if (all(diff(as.numeric(data)) &lt; 0)) &#123; # 逐级递减——1 return(1) &#125; else if (all(diff(as.numeric(data)) &gt; 0)) &#123; # 逐级递增——2 return(2) &#125; else if (length(data) ==3 &amp; diff(as.numeric(data))[1] &gt; 0 &amp; diff(as.numeric(data))[2] &lt; 0) &#123; # 先上升后下降——3（只涉及三个分组的情况） return(3) &#125; else if (length(data) ==3 &amp; diff(as.numeric(data))[1] &lt; 0 &amp; diff(as.numeric(data))[2] &gt; 0) &#123; # 先下降后上升——4（只涉及三个分组的情况） return(4) &#125; else &#123; # 没有趋势——0 return(0) &#125;&#125;pacman::p_load(lmbio, dplyr)dataname &lt;- &quot;./Venn.xlsx&quot;# sheetname &lt;- &quot;并集&quot;sheetname &lt;- &quot;交集&quot;sample &lt;- readdata(&quot;./数据矩阵.xlsx&quot;, sheet = &quot;分组&quot;)data &lt;- readdata(dataname, sheet = sheetname)[c(&quot;Metabolites&quot;, sample$Sample)]averadata &lt;- merge(as.data.frame(t(data)), sample, by.x = &quot;row.names&quot;, by.y = &quot;Sample&quot;)[, -1]colnames(averadata) &lt;- c(t(data)[1, ], &quot;Group&quot;)cols &lt;- grep(&quot;Group&quot;, colnames(averadata))# 使用 lapply() 函数对这些列应用 as.numeric() 函数averadata[-cols] &lt;- lapply(averadata[, -cols], as.numeric)result &lt;- averadata %&gt;% group_by(Group) %&gt;% summarise_all(mean)averadata &lt;- t(result)[-1, ] %&gt;% as.data.frame(.)colnames(averadata) &lt;- t(result)[1, ]averadata &lt;- averadata[unique(sample$Group)]averadata$up_down &lt;- apply(averadata, 1, function(x) &#123; abundance_range(x) &#125;)out_avera &lt;- as.data.frame(lapply(averadata, as.numeric))rownames(out_avera) &lt;- rownames(averadata)colnames(out_avera) &lt;- colnames(averadata)# 选取趋势上下的进行保存out &lt;- list()out[[&quot;union_down&quot;]] &lt;- merge(subset(out_avera, up_down == 3), data, by.x = &quot;row.names&quot;, by.y = &quot;Metabolites&quot;, all.x = T, sort = FALSE) %&gt;% rename(Metabolites = Row.names)out[[&quot;union_up&quot;]] &lt;- merge(subset(out_avera, up_down == 4), data, by.x = &quot;row.names&quot;, by.y = &quot;Metabolites&quot;, all.x = T, sort = FALSE) %&gt;% rename(Metabolites = Row.names)out[[&quot;union_up_down&quot;]] &lt;- merge(subset(out_avera, up_down == 3 | up_down == 4), data, by.x = &quot;row.names&quot;, by.y = &quot;Metabolites&quot;, all.x = T, sort = FALSE) %&gt;% rename(Metabolites = Row.names)savexlsx(out, &quot;venn.xlsx&quot;)"},{"path":"/2025/01/14/2.常用分析/2.常用分析/","content":"1.组学通用 富集分析 相关性分析 趋势分析 WGCNA分析 Biomarker筛选 分子分型 2.代谢组学 3.蛋白组学 免疫浸润 4.组学联合 MOFA分析 蛋白代谢联合 5.纯生信分析 孟德尔随机化"},{"path":"/2025/01/14/2.常用分析/1.组学通用/分子分型/","content":"Stem-云平台 模板样式 R"},{"path":"/2025/01/14/2.常用分析/1.组学通用/趋势分析/","content":"Stem-云平台 模板样式 R"},{"path":"/2025/01/14/1.常用绘图/5.箱线图/5.2.小提琴图/","content":"箱线图"},{"path":"/2025/01/14/1.常用绘图/1.常用绘图/","content":"面积图 例：概况与常见示例 饼图 简要介绍一下饼图的内容 饼图 气泡图 简要介绍一下气泡图的内容，展示所有气泡图 气泡图 堆叠面积图 简要介绍一下堆叠面积图的内容，展示所有堆叠面积图 堆叠面积图 基础面积图 简要介绍一下基础面积图的内容，展示所有基础面积图 基础面积图 条形图 例：概况与常见示例 堆积柱状图 简要介绍一下堆积柱状图的内容，展示所有堆积柱状图 堆积柱状图 柱状图 简要介绍一下柱状图的内容，展示所有柱状图 柱状图 环形柱状图 简要介绍一下环形柱状图的内容，展示所有环形柱状图 环形柱状图 点线图 例：概况与常见示例 散点图 简要介绍一下散点图的内容，展示所有散点图 散点图 哑铃图 简要介绍一下哑铃图的内容，展示所有哑铃图 哑铃图 折线图 简要介绍一下折线图的内容，展示所有折线图 折线图 关系图 例：概况与常见示例 桑基图 简要介绍一下桑基图的内容，展示所有桑基图 桑基图 弦图 简要介绍一下弦图的内容，展示所有弦图 弦图 网络图 简要介绍一下网络图的内容，展示所有网络图 网络图 箱线图 例：概况与常见示例 箱线图 简要介绍一下箱线图的内容，展示所有箱线图 箱线图 小提琴图 简要介绍一下小提琴图的内容，展示所有小提琴图 小提琴图 极坐标图 例：概况与常见示例 雷达图 简要介绍一下雷达图的内容，展示所有雷达图 雷达图"},{"path":"/2025/01/14/1.常用绘图/5.箱线图/5.1.箱线图/","content":"箱线图"},{"path":"/2025/01/14/1.常用绘图/4.关系图/4.3.网络图/","content":"网络图 弦图 桑基图 词云图"},{"path":"/2025/01/14/1.常用绘图/4.关系图/4.2.弦图/","content":"网络图 弦图 桑基图 词云图"},{"path":"/2025/01/14/1.常用绘图/4.关系图/4.1.桑基图/","content":"网络图 弦图 桑基图 词云图"},{"path":"/2025/01/14/1.常用绘图/3.点线图/3.3.折线图/","content":"云平台 map_common_volcano 参数解析 样式详解 样式1 map_common_volcano -f volcano.xlsx 示例输入数据 火山图 样式2 样式3"},{"path":"/2025/01/14/1.常用绘图/3.点线图/3.1.散点图/","content":"散点图 散点图概要 火山图 火山图1 火山图2 散点图 基本散点图 棒棒糖图 棒棒糖图1 棒棒糖图2 棒棒糖图3 蜂群图 蜂群图 哑铃图 折线图"},{"path":"/2025/01/14/1.常用绘图/2.条形图/2.3.环形柱状图/","content":"云平台 map_common_pie 参数解析 样式详解 样式1 map_common_pie -f pie_data.xlsx 示例输入数据 饼图 样式2 样式3"},{"path":"/2025/01/14/1.常用绘图/2.条形图/2.2.柱状图/","content":"云平台 map_common_pie 参数解析 样式详解 样式1 map_common_pie -f pie_data.xlsx 示例输入数据 饼图 样式2 样式3"},{"path":"/2025/01/14/1.常用绘图/2.条形图/2.1.堆积柱状图/","content":"云平台 map_common_pie 参数解析 样式详解 样式1 map_common_pie -f pie_data.xlsx 示例输入数据 饼图 样式2 样式3"},{"path":"/2025/01/14/1.常用绘图/6.极坐标图/6.1.极坐标图/","content":"雷达图 极坐标散点图 极坐标热力图"},{"path":"/2025/01/14/1.常用绘图/1.面积图/1.4.基础面积图/","content":"云平台 map_common_pie 参数解析 样式详解 样式1 map_common_pie -f pie_data.xlsx 示例输入数据 饼图 样式2 样式3"},{"path":"/2025/01/14/1.常用绘图/1.面积图/1.3.堆叠面积图/","content":"云平台 map_common_pie 参数解析 样式详解 样式1 map_common_pie -f pie_data.xlsx 示例输入数据 饼图 样式2 样式3"},{"path":"/2025/01/14/1.常用绘图/1.面积图/1.2.气泡图/","content":"云平台 map_common_pie 参数解析 样式详解 样式1 map_common_pie -f pie_data.xlsx 示例输入数据 饼图 样式2 样式3"},{"path":"/2025/01/14/1.常用绘图/1.面积图/1.1.饼图/","content":"云平台 map_common_pie 参数解析 样式详解 样式1 饼图 map_common_pie -f pie_data.xlsx 示例输入数据 样式2 饼图 命令2 示例输入数据 样式3 饼图 命令3 示例输入数据"},{"title":"搭建博客","path":"/2024/08/05/blog/","content":"主页链接—Aning 因为看到很多炫酷的个人博客网页，所以就很想做一个自己的网页界面，经过一番探索和搜集网络教程后，我总结一下大致流程和我踩过的坑叭 注：以下终端Linux 前提软件 需要终端已经安装以下软件 Github（产生网站端—.io域名） ➕ Node.js（安装Hexo—npm命令） ➕ Hexo（配置网站各种个性化主题） Github 在github中新建仓库创建github pages，仓库命名为——username.github.io blog1 详见官方文档 创建网址.github.io域名网站 Node.js 以下为Linux端口安装软件node.js软件 版本选择——建议选择稳定版本18.8.0 下载压缩包 1wget https://registry.npmmirror.com/-/binary/node/v18.18.0/node-v18.18.0-linux-x64.tar.gz 解压并删除压缩包 1tar -zxvf node-v18.18.0-linux-x64.tar.gz &amp;&amp; rm -f node-v18.18.0-linux-x64.tar.gz 将解压后的文件夹改名为nodejs放入软件的文件夹中 1mv node-v18.18.0-linux-x64 /tools/nodejs 最后配置环境变量 .bashrc即可 1export PATH=&quot;$&#123;PATH&#125;:/tools/nodejs/bin&quot; 查看版本 1node -v Hexo 安装软件——详见官网 1npm install -g hexo-cli 创建theme文件夹并进行初始配置 123hexo init themecd themenpm install 个性配置 安装主题 也可以安装Next主题，不过这个主题太多人用了，我就找了另一个大佬的主题，详见这 1npm i hexo-theme-stellar 修改theme文件夹中的_config.yml 主题配置 1theme: stellar 因为要推送到git，同时添加一下网址 1234deploy: type: git repository: git@github.com:Aning-Q/Aning-Q.github.io.git #自己的仓库地址 branch: master #分支也要对应 注：推送时可能会因为分支冲突，github pages可以修改分支端 blog2 首次创建主题需要部署一个插件将其发布到git中 1npm i hexo-deployer-git 安装成功后，执行 1hexo clean &amp;&amp; hexo g &amp;&amp; hexo d hexo clean——清楚缓存 hexo g——创建静态网页 hexo d——推送git，原理就是将public文件夹中内容的推送至github中 推送成功后打开username.github.io即可看到网址端更新成功啦！ 后续更新将.md文件放入source文件夹的_posts 文件夹即可 网站个性化配置 主要是两个文件的配置 theme文件夹的_config.yml theme/node_modules/hexo-theme-stellar文件夹的_config.yml 在Google中检索到个人网站 网站认证 sitemap站点 后续再更新~~~","tags":["to do","生活"],"categories":["教程"]},{"path":"/2024/08/05/annova/","content":""},{"title":"😊Git","path":"/2024/03/04/Git/","content":"常用命令 克隆到本地——git clone +ssh/htttps： 查看状态(有无修改)——git status 添加缓存（需要提交的脚本）——git add * 添加描述（进行了什么操作）——git commit -m 备注 拉取分支（远程中含有的分支）——git fetch origin 分支名 查看远程分支——git branch -a 创建并切换到本地分支——git checkout -b test origin/test 切换分支——git checkout main 拉取远程分支合并本地——git pull origin 分支名 更新本地仓库——git pull 提交分支——git push origin 分支名 删除已合并的本地分支——git branch -d branch_name 以上有关于分支的操作是需要团队协作是可选择的，如果只对自己的代码进行管理可以简化如下： git clone $\\rightarrow$git status$\\rightarrow$git add * $\\rightarrow$git commit -m 备注$\\rightarrow$git push 远程连接 git remote 这个命令的意义是建立远程连接，可以将自己另一个文件夹的代码推送到指定远程的仓库中 git init ——先初始化本地文件夹（已经有.git文件不需要） git stauts——查看有哪些未跟踪的文件 git remote add origin http://gitlab.oebiotech.cn/kqq/lcms.git——建立远程连接 git remote -v——查看已建立的远程连接 git remote rm origin——删除远程连接 git push origin master——origin：远程名称；master：分支名 暂存区 git add 文件名——提交文件到暂存区 git ls-files——查看暂存区 git rm --cached 文件名——删除暂存区文件 修改配置","tags":["git"],"categories":["Testing"]},{"title":"😰Python","path":"/2023/11/28/Python/","content":"This is a python test 配置 python -m pip install pandas ——安装模块 实用代码 数据处理 文件夹 返回当前工作目录——os.getcwd() 表格 ex = pd.ExcelFile(file)——ex.sheet_names()——读取sheet data= pd.read_excel(ex,sheet,index_col)——读取文件 df1=pd.read_csv(“.\\ppi-test-8860\\A_B\\ppi_nodes.xls”,sep=“\\t”)——读取xls文件 data.columns——列名 data.index——行索引 data.loc[:,[“”,“”]]——提取包含列 data.iloc[0, 0]——取第几行几列 df = df.assign(column_new_1=np.nan, column_new_2=‘dogs’, column_new_3=3)——添加多列 数据转化 二维列表转化为一维列表——listA=[x for j in listB for x in j] set类型——排除重复元素 统计个数——Counter(la)–from collections import Counter 数组形式——data.items() 排序——dpro = sorted(dproscore.items(), key=lambda x: x[1])–从小到大 将表转化为字典——dict(zip(df.iloc[:,0],df.iloc[:,1])) 创建新对象赋值——a.copy() 一行形式的for循环——[x for x in a] 字符处理 使用正则表达式进行匹配——re.search(“0-9”,line) 将字典的一个键对应的多个值前都添加相同的字符——dic_g[i] = [org + str(x) for x in dic_g[i]] rstrip——去除末尾字符串 匹配特定文件后缀——[x for x in a if re.search(r&quot;.py$“,x)] 列表替换—[x.replace(“path:”,”&quot;) for x in a] 图片绘制 图例紧随其后——savefig(‘{compare}.pdf’.format(compare=name),dpi=300,bbox_inches=‘tight’) 设置画板背景——plt.figure(figsize=(7, 5.6),facecolor=‘white’)— 爬虫 爬取数据——response=requests.get(url, headers=self.headers) url—网址 headers—response.status_code == 200—响应正常 response.text—html格式的文本形式 其他 字符串前加 f 的意思格式化 {} 内容，不在 {} 内的照常展示输出，如果你想输出 {}，那就用双层 {{}} 将想输出的内容包起来。","tags":["python","学习"],"categories":["Testing"]},{"title":"Hello World","path":"/2023/11/28/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick Start Create a new post 1$ hexo new &quot;My New Post&quot; More info: Writing Run server 1$ hexo server More info: Server Generate static files 1$ hexo generate More info: Generating Deploy to remote sites 1$ hexo deploy More info: Deployment","categories":["Testing"]},{"title":"about","path":"/about/index.html","content":"超级小白-持续更新~"},{"title":"收藏站点","path":"/notes/index.html","content":"此页面为一些个人认为实用的站点 生信网站 R语言 http://www.idata8.com/index2.html函数参数释义 https://coolors.co/palettes/trending配色 https://jokergoo.github.io/ComplexHeatmap-reference/book/introduction.htmlComplexHeatmap使用说明 Python https://matplotlib.org/stable/api/markers_api.html[matplot形状] https://www.jianshu.com/p/32aa2fa936bb[VSCODE远程] 学习 https://read.qxmd.com/[文献阅读] https://www.hello-algo.com/chapter_preface/about_the_book/[Hello算法] 个性配置 https://emojixd.com/[各种emoji] https://chat.openai.com/[Chagpt] https://discourse.joplinapp.org/tag/tips-and-tricks[joplin论坛] 大佬们 https://www.achuan-2.top/[Achuan-2] https://xaoxuu.com/[Stellar主题大佬]","tags":[null,null]}]